#include "form/core/accessibility_interface.nvgt"
#include "form/core/control.nvgt"
#include "form/events/event.nvgt"
#include "speech.nvgt"

class AccessibilityManager {
    private bool interrupt_on_focus = true;
    
    void announce_control(IControl@ control, bool interrupt = true) {
        if (@control is null) return;
        
        string announcement = build_announcement(control);
        if (announcement.length() > 0) {
            speak(announcement, interrupt);
        }
    }
    
    string build_announcement(IControl@ control) {
        if (@control is null) return "";
        
        string name = control.get_accessible_name();
        string state = control.get_accessible_state();
        string role = control.get_accessible_role();
        
        // Add unavailable state if disabled
        if (!control.is_enabled()) {
            if (state.length() > 0) state += " ";
            state += "unavailable";
        }
        
        if (role == "list" || role == "slider" || role == "radio group") {
            string announcement = name;
            if (announcement.length() > 0) announcement += " ";
            announcement += role;
            if (state.length() > 0) {
                announcement += " ";
                announcement += state;
            }
            return announcement;
        }
        
        // Default order: name + state + role
        string announcement = name;
        if (state.length() > 0) {
            if (announcement.length() > 0) announcement += " ";
            announcement += state;
        }
        if (role.length() > 0) {
            if (announcement.length() > 0) announcement += " ";
            announcement += role;
        }
        
        return announcement;
    }
    
    void handle_focus_changed(IControl@ control) {
        announce_control(control, interrupt_on_focus);
    }
    
    void handle_activated_event(Event@ event) {
        IControl@ control = event.source;
        if (@control is null) return;
        
        string role = control.get_accessible_role();
        
        if (role == "checkbox") {
            string state = control.get_accessible_state();
            speak(state, true);
        }
        else if (role == "radio group") {
            string state = control.get_accessible_state();
            if (state != "no selection") {
                speak(state, true);
            }
        }
        else if (role == "slider") {
            string state = control.get_accessible_state();
            speak(state, true);
        }
    }
    
    void handle_event(Event@ event) {
        if (event.type == EventType::FocusGained) {
            handle_focus_changed(event.source);
        } else if (event.type == EventType::Activated) {
            handle_activated_event(event);
        }
    }
    
    void announce_help(IControl@ control) {
        if (@control is null) return;
        
        string help = "Press Tab to move to the next control, Shift Tab to move to the previous control";
        string role = control.get_accessible_role();
        
        if (role == "button") {
            help += ", Enter or Space to activate";
        } else if (role == "checkbox") {
            help += ", Space to toggle";
        } else if (role == "list") {
            help += ", Arrow keys to navigate items, Enter or Space to select";
        } else if (role == "radio group") {
            help += ", Arrow keys to select options";
        } else if (role == "slider") {
            help += ", Left and Right arrows to adjust value, Home and End for minimum and maximum, Page Up and Page Down to adjust by larger increments";
        }
        
        speak(help, true);
    }
}
