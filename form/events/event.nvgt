#include "form/core/control.nvgt"

enum EventType {
    KeyPressed,
    KeyReleased,
    FocusGained,
    FocusLost,
    Activated,
}

class Event
{
    IControl@ source;
    EventType type;
    bool is_handled = false;

    Event(IControl@ source, EventType type)
    {
        @this.source = source;
        this.type = type;
    }

    void stop_propagation() { is_handled = true; }
}

class KeyEvent : Event
{
    int keycode;
    bool shift;
    bool control;
    bool alt;

    KeyEvent(IControl@ source, EventType type, int keycode, bool shift = false, bool control = false, bool alt = false)
    {
        super(source, type);
        this.keycode = keycode;
        this.shift = shift;
        this.control = control;
        this.alt = alt;
    }
}

class CheckboxEvent : Event
{
    bool checked;

    CheckboxEvent(IControl@ source, bool checked)
    {
        super(source, EventType::Activated);
        this.checked = checked;
    }
}

class ListEvent : Event
{
    ListItem@ item;
    int index;

    ListEvent(IControl@ source, ListItem@ selected_item, int item_index)
    {
        super(source, EventType::Activated);
        @this.item = selected_item;
        this.index = item_index;
    }
}

class RadioButtonEvent : Event
{
    RadioButton@ selected_item;
    int selected_index;

    RadioButtonEvent(IControl@ source, RadioButton@ item, int index)
    {
        super(source, EventType::Activated);
        @this.selected_item = item;
        this.selected_index = index;
    }
}

class SliderEvent : Event
{
    double old_value;
    double new_value;

    SliderEvent(IControl@ source, double old_val, double new_val)
    {
        super(source, EventType::Activated);
        this.old_value = old_val;
        this.new_value = new_val;
    }
}

